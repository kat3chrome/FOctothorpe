//Описать функцию, которая работает как map, 
//только для каждого значения исходного списка 
//можно задать не одно, а несколько значений, 
//на которые его надо заменить. 
//Пример вызова: supermap [1.0; 2.0; 3.0] (fun x -> [sin x; cos x]) 
//должно возвращать [sin 1.0; cos 1.0; sin 2.0; cos 2.0; sin 3.0; cos 3.0]. 
//Конструкции императивного программирования использовать нельзя.

module Supermap

let supermap list funs = List.collect (fun x -> funs x) list

printf "%A" (supermap [1; 2] (fun x -> [x + 1; x - 1]))